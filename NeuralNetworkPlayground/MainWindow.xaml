<Window x:Class="NeuralNetworkPlayground.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeuralNetworkPlayground"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="Neural network playground made by Łukasz Adach   lukasz.adach7@gmail.com"  SizeToContent="WidthAndHeight" WindowStyle="ToolWindow" ResizeMode="NoResize" >
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Margin" Value="10,0"></Setter>
            <Setter Property="Padding" Value="10,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#009688" BorderThickness="0" >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#E0F2F1"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="Gray"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#00695C"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#004D40"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <TabControl Background="White">
        <TabItem Header="Pixels">
            <Grid >
                <Grid.DataContext >
                    <local:PixelsViewModel x:Name="context"/>
                </Grid.DataContext>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="Black" BorderThickness="0" Margin="10">
                    <ItemsControl x:Name="canvas" Grid.Row="0" Height="300" Width="300" Background="Black" ItemsSource="{Binding CanvasCollection}" >
                        <i:Interaction.Behaviors>
                            <local:MouseBehaviour MouseX="{Binding PanelX, Mode=OneWayToSource}" 
                                          MouseY="{Binding PanelY, Mode=OneWayToSource}" />
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding MouseLeftCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:InvokeCommandAction Command="{Binding MouseRightCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ItemsControl>
                </Border>
                <StackPanel Grid.Row="0" Grid.Column="1" Height="300"  Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0">
                        <Button x:Name="Lear" Width="130" Command="{Binding LearnCommand}" Content="{Binding ButtonLearnTitle}" ></Button>
                        <Button x:Name="Clear" Width="130"  Command="{Binding ClearCommand}"  >Clear network</Button>
                    </StackPanel>
                    <DockPanel LastChildFill="True" Margin="10,20,10,10">
                        <TextBlock  FontSize="16" Margin="0,0,10,0" VerticalAlignment="Center" >Topology (e.g."8;5")</TextBlock>
                        <TextBox x:Name="topo" Width="auto" Height="30" Margin="5,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="{Binding Topology, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding TopologyChangedCommand}" CommandParameter="{Binding ElementName=topo, Path=Text}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </DockPanel>
                    <DockPanel LastChildFill="True" Height="30" Margin="10,0" >
                        <TextBlock  FontSize="16" Margin="0" VerticalAlignment="Center" >Learning rate</TextBlock>
                        <Slider x:Name="alpha" Minimum="0.01" Margin="55,0,0,0" VerticalAlignment="Center" Maximum="1" Width="90" Value="{Binding LearningRate}"></Slider>
                        <TextBlock  FontSize="16"  VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding ElementName=alpha,  Path=Value}" ></TextBlock>
                    </DockPanel>
                    <DockPanel LastChildFill="True" Height="30" Margin=" 10,10">
                        <TextBlock  FontSize="16" Margin="0,5" >Learn to test ratio</TextBlock>
                        <Slider x:Name="tests" Margin="23,0,0,0" VerticalAlignment="Center" Maximum="1" Width="90" Value="{Binding LearnToTest}"></Slider>
                        <TextBlock  FontSize="16"  VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding ElementName=tests,  Path=Value}" ></TextBlock>
                    </DockPanel>
                    <TextBlock Foreground="Red" FontSize="16" Margin="10,10" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding LossRMSETest}"></TextBlock>
                    <TextBlock Foreground="Blue" FontSize="16" Margin="10,10" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding LossRMSE}"></TextBlock>
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Image learning">
            <Grid >
                <Grid.DataContext >
                    <local:ImageLearningViewModel x:Name="context2"/>
                </Grid.DataContext>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="620"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel  Margin="10" Orientation="Horizontal">
                    <StackPanel  Margin="0,0,5,0">
                        <TextBlock >Your image</TextBlock>
                        <StackPanel Background="LightGray">
                            <Image Grid.Row="0" RenderOptions.BitmapScalingMode="Fant" HorizontalAlignment="Left" SnapsToDevicePixels="True" Width="300" Height="300" VerticalAlignment="Bottom" Source="{Binding TestBitmap}"></Image>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock>Network answer</TextBlock>
                        <ItemsControl  Grid.Row="0" Height="300" Width="300" Background="LightGray"  HorizontalAlignment="Right" ItemsSource="{Binding CanvasCollection2}" ></ItemsControl>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Row="0" Grid.Column="1" Height="300" VerticalAlignment="Top" Margin="0,27,0,0"  Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0">
                        <Button  Width="130" Command="{Binding LearnCommand}" Content="{Binding ButtonLearnTitle}" ></Button>
                        <Button  Width="130"  Command="{Binding ClearCommand}"  >Clear network</Button>
                    </StackPanel>
                    <DockPanel LastChildFill="True" Margin="10,20,10,10">
                        <TextBlock  FontSize="16" Margin="0,0,10,0" VerticalAlignment="Center" >Topology (e.g."8;5")</TextBlock>
                        <TextBox x:Name="topo2" Width="auto" Height="30" Margin="5,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="{Binding Topology, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding TopologyChangedCommand}" CommandParameter="{Binding ElementName=topo2, Path=Text}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </DockPanel>
                    <DockPanel LastChildFill="True" Height="30" Margin="10,0" >
                        <TextBlock  FontSize="16" Margin="0" VerticalAlignment="Center" >Learning rate</TextBlock>
                        <Slider x:Name="alpha2" Minimum="0.01" Margin="58,0,0,0" VerticalAlignment="Center" Maximum="1" Width="80" Value="{Binding LearningRate}"></Slider>
                        <TextBlock  FontSize="16"  VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding ElementName=alpha2,  Path=Value}" ></TextBlock>
                    </DockPanel>
                    <DockPanel LastChildFill="True" Height="30" Margin="10,0" >
                        <TextBlock  FontSize="16" Margin="0" VerticalAlignment="Center" >Batch size</TextBlock>
                        <Slider x:Name="batchSize" Minimum="1" Margin="81,0,0,0" VerticalAlignment="Center" Maximum="1000" Width="80" Value="{Binding BatchSize}"></Slider>
                        <TextBlock  FontSize="16"  VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding ElementName=batchSize,  Path=Value}" ></TextBlock>
                    </DockPanel>
                    <TextBlock Foreground="Blue" FontSize="16" Margin="10,10" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding LossRMSE}"></TextBlock>
                    <Button  Width="130" Command="{Binding OpenCommand}" HorizontalAlignment="Left" Content="Open image" ></Button>
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
